---
title: "Mastering Software Technique"
layout: mst
---

# Without Software _Technique_,<br/> Nothing Works

<%= aside_image("https://software-technique.com/images/SittingCoder.png", image_classes: ["no-border"], alt: "Figure at a keyboard, typing and learning", disappear_on_mobile: true, direction: :right, caption: "Without the right practice the computer does what you <em>tell</em> it to, not what you <em>want</em> it to.") %>

You _know_ what the code needs to do, in that ugly moment.
You can _see_ it in your mind... And it's *just*... **NOT**... *doing* it.
You wrote a loop, and it's wrong, and you *know* it's wrong.
You can explain the right code. You just can't _write_ the right code.

That blinking cursor is mocking you.

What *doesn't* fix that problem? Learning more algorithms.
Or reading more blog posts. Or more books. Even if you learn all
the math and computer science, there's a specific technique to
writing code, and all the study in the world doesn't give it to you.

What does? _Practice_.

The right kind of practice. Conscious, mindful practice done well.

When everything works, you can just write out the loop. It's straightforward. *You pick up a problem and twenty
minutes later, you write a solution and it works*.

When you're really good, you can just predictably _write_ the code. You don't wait for inspiration. You just
do it.

When a problem comes up at work and a prototype would show the right answer?
You can just write one. Need to verify a design choice or test out a data architecture? *Boom, do it*.

How do you get that good? The **_right kind_** of practice.

What's the right kind of practice? **_That's what this book is about_**.

<div class="cta">
    <p>Already convinced? You can buy it on Gumroad. Full refund if you don't like it.</p>
    <a class="gumroad-button" href="https://gum.co/mastering_software_technique">Buy the Book on Gumroad</a>
</div>

<div class="divider" style="height: 50px;"></div>

## But I Already _Do_ Coding Exercises&hellip;

Yeah, you do. Me too. And they require somebody to have worked them out in advance. But they really only work once for each exercise, so you constantly need new ones. And you can't tell in advance if the one you've found is any good. You _hope_ you're getting Sandi Metz's "99 Bottles of OOP," but usually you're getting the "Coding Challenge of the Week" to do some little math problem. There's a reason 99 Bottles costs money - I can't name a second set of exercises that good. Can you?

You need practice that you can just _do right now_ without hoping Google will be your tutor.

Exercises are fine. But the magic happens when you _stop_ doing somebody else's exercise and you do the things _you_ care about, that give you the skills _you_ want. That's the whole purpose.

## But I Practice at Work&hellip;

Yeah, you do. I do too. And your coworkers argue constantly about what project to do, and what language or tool to use for it.

That's because the kind of work the business wants is different from the kind of work that makes you better, faster. And the kind of work *you* need is different from the kind of work that *other* developers need.

If your job was going to give you the right practice, you'd have to win those arguments. You would have to get good at politics, to win those arguments, to get the kind of practice you need... And you'll always worry that you're doing worse work for the business because you're prioritising *your learning* over *their money*.

*I don't want to spend my time at work winning at politics. Do you?*

There's a way around that.

Heck, if you tell your employer you're buying this book to get better at coding, *they will probably be thrilled to pay for it*. Do you know how much it costs them when you get stuck for a couple of days? I sell a lot of books that employers cheerfully pay for. Businesses like it when their employees get better at coding.

## But How Does a Book Do That?

I've written blog posts and <a href="https://www.youtube.com/watch?v=33fAzjOTaDE" target="_blank">spoken at RubyConf on this topic</a>. The short version is that there are some excellent exercises I've adapted from non-computer disciplines. They're not common for software yet, but they *really* should be - I hope in a few years they'll be common.

The book introduces a type of programming exercise that doesn't require another coder to set it up for you. I call my version a "Coding Study." It can be used with any computer language or library you like. It works great alone or pairing. There are simple steps to start a coding exercise on any topic. I also give guidelines, examples and advice so you can learn even more rapidly.

Then you have to practice a lot. But you'll learn faster than you could without coding studies. The book can only tell you how to practice.

_Don't buy the book if you're not planning to do the exercises_.

## What If It Doesn't Work? What If It's Not Right for Me?

If you do the exercises and you don't improve rapidly, you should ask for ***a full refund***. I sell through Gumroad, which makes refunds quite easy, and I'm happy to do it. ***If you don't improve, I don't want your money***.

If you can write basic code in a language of your choice, the book _isn't too advanced for you_. It's not likely to be too simple for you &mdash; I use this technique with great success and I've been a professional programmer for over 20 years.

The code samples are in Ruby. *If looking at Ruby makes you itch, the book may not be right for you*. The Ruby code is not particularly complicated.

I assume you want to get better at *the skill of coding*. This isn't guaranteed to get you a job, teach you algorithm design or help you with interviewing. Those are different skills. Being better at coding may help your career &mdash; or it may not. I get better at coding because I love it, and I advance in my career even though sometimes I hate it. They're different.

## Can't I Get The Same Thing From You For Free?

More or less, yeah. The <a href="https://www.youtube.com/watch?v=33fAzjOTaDE" target="_blank">RubyConf talk is recorded</a>. Many explanatory blog posts are free. I always do that &mdash; you can get the <a href="https://github.com/noahgibbs/rulers" target="_blank">complete code for my previous</a> <a href="https://github.com/noahgibbs/best_quotes" target="_blank">book on GitHub</a>, even though the full book costs money. I give away a lot of free material, and it's good. There are no deep secrets that I keep back only behind a paywall.

_If you just want the magical secret from the book, it's not hard to find_. You can get a lot of it just by reading this page.

(If you just want the magical secret from the book, that means you're not planning to do the exercises. If that's true, don't buy the book.)

What you get by paying money is this:

* A lot about *why* to do everything - so you can mix and match, or fit it to your situation
* Simple, step-by-step instructions and good examples
* Everything in one place without having to click around and put it together for yourself
* Save a bunch of time
* Plans about how to build practice on practice into a coherent program
* You paid, so you feel like you have to do the exercises - and the book doesn't work unless you do them

None of this is magic. None of it is rocket science. All of it is convenience or commitment, which you *could* get by just doing more work or having more discipline. Because you're here, you don't think that has been enough so far. It isn't enough for me personally - I pay for books and classes regularly so I can learn faster.

If you believe that paying for the book is robbery when you could just spend hours combing through blog posts (mine and others,) taking notes and collecting examples... You may not be interested in buying this book. Or most other books.

If you believe you should do all of that on work time, please keep in mind what your time costs your business. Four or five hours of your salary is usually *far* more than this book costs.

## Can I Get Better Without Doing All Those Exercises?

_If you're not going to do the exercises, please don't buy the book._ It really doesn't work without that step.

If you do a few of the exercises, you get a little of the benefit. If you do none of the exercises, you get none of the benefit.

## Don't Learn Well From Books?

Understandable. There's <a href="https://www.youtube.com/watch?v=33fAzjOTaDE" target="_blank">the RubyConf talk</a>, of course. And I'm working on more hands-on videos.

If you *really* don't like books, you could <a href="https://codefol.io/workshops" target="_blank">bring me in to give a workshop where you work</a>, especially if you're in the United Kingdom.

## Not Sure?

That's reasonable. You could also enter your email address below, and I'll send you sample chapters and a free email class about software technique and practice.

Besides, what are the chances that I'll make this book more expensive after launch? I would only do that if it helped a lot of people get better at coding and it was a serious competitive advantage. Because if that happened then employers would often pay for it, and I like to charge them more than random coders.

<div class="mc_styling">
<link href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css" rel="stylesheet" type="text/css">
<style type="text/css">
  #mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; }
  /* Add your own Mailchimp form style overrides in your site stylesheet or in this style block.
     We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
</style>
<div id="mc_embed_signup">
<form action="https://rebuilding-rails.us2.list-manage.com/subscribe/post?u=c5569fb6471a3e64be2aa1466&amp;id=82afd59934&amp;SIGNUP=st_notsure_technique" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
    <div id="mc_embed_signup_scroll">
  <span class="lead">Sign Up for an Email Class and Free Chapters.</span>
<div class="indicates-required"><span class="asterisk">*</span> indicates required</div>
<div class="mc-field-group">
  <label for="mce-EMAIL">Email Address  <span class="asterisk">*</span>
</label>
  <input type="email" value="" name="EMAIL" class="required email" id="mce-EMAIL">
</div>
<div class="mc-field-group">
  <label for="mce-FNAME">Name </label>
  <input type="text" value="" name="FNAME" class="" id="mce-FNAME">
</div>
  <div id="mce-responses" class="clear">
    <div class="response" id="mce-error-response" style="display:none"></div>
    <div class="response" id="mce-success-response" style="display:none"></div>
  </div>
    <div style="position: absolute; left: -5000px;" aria-hidden="true"><input type="text" name="b_c5569fb6471a3e64be2aa1466_82afd59934" tabindex="-1" value=""></div>
    <div class="clear"><input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button"></div>
    </div>
</form>
</div>

<script type='text/javascript' src='//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js'></script><script type='text/javascript'>(function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[0]='EMAIL';ftypes[0]='email';fnames[1]='FNAME';ftypes[1]='text';fnames[2]='LNAME';ftypes[2]='text';}(jQuery));var $mcj = jQuery.noConflict(true);</script>

</div>


<!--
6. Overcome objections

7. Subhead (named after main benefit of product)
8. Describe basic outline of what product is and what it does
9. Bullet points ("fascinations") about what the product gives you
10. Headline

Passes: more show-don't-tell, more specific benefits/dream



Pain of seeing other folks who are amazing and realising you have no way to get those same skills.
Pain of seeing skills that are just out of reach - it's not the academics, it's comfortably picking the skill up and *using* it.
-->

<div class="cta">
    <p>This book isn't finished. Which means you get more of my time and attention with every comment or issue you
    have with it. It also means you're getting a rare advantage. Most developers don't do this &mdash; <em>yet</em>. </p>

    <p>All updates are free, naturally. Full refund for any reason or no reason.</p>
    <a class="gumroad-button" href="https://gum.co/mastering_software_technique">Buy the Book on Gumroad</a>
</div>

<div style="height: 50px;"></div>
