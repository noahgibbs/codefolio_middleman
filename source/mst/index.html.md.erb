---
title: "Mastering Software Technique"
layout: mst
---

# Without Software _Technique_,<br/> Nothing Works

<%= aside_image(current_page.url + "images/SittingCoder.png", image_classes: ["no-border"], alt: "Figure at a keyboard, typing and learning", disappear_on_mobile: true, direction: :right, caption: "Without the right practice, you won't be what you want to be.") %>

You _know_ what the code needs to do, in that ugly moment.
You can _see_ it in your mind... And it's *just*... **NOT**... *doing* it.
You wrote a little loop, and it's wrong, and you *know* it's wrong.
You can _explain_ the right code. You just can't _write_ the right code.

That blinking cursor is mocking you.

What *doesn't* fix that problem? Learning more algorithms.
Or reading more blog posts. Or more books. Even if you learn all
the math and computer science, there's a specific technique to
writing code, and all the study in the world doesn't give it to you.

What does? _**Practice**_.

The _*right kind*_ of practice. Conscious, mindful practice done well.

When everything works, you can just write out the loop. Yeah, you have to
debug it, but... it's straightforward. You grind through the code for an
hour and you have an hour's worth of code. You have a problem and, twenty
minutes later, you wrote a solution and it works.

When you're really good, you can just predictably _write_ the code. It
doesn't have to be an event. You don't wait for inspiration. You just
do it.

How do you get that good? The right kind of practice.

<!--
1. Hook
2. Dream
3. Pain
4. What they've tried
5. Introduce a solution
6. Overcome objections
-->

<div class="cta">
  <a class="gumroad-button" href="https://gum.co/mastering-software-technique">Buy the Book on Gumroad</a>
</div>